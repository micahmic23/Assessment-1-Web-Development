/** The CSS is created through the use of an external file which is then linked to the html file to be styled on.**/



/** 
	- The header property allows the header tag to be styled on using CSS. Multiple properties are used to apply different styles.
   	- Each property ends with a semi-column for the CSS to function.
	- The property 'background-color' allows the top header's background color to be changed. A dark purple color is applied using hex color values (#17072b).
	- For the heading to be aligned at the center, the property 'text-align' is used with the attribute 'center'.
	- To change the color of the header's text, the attribute 'color' is set to the color white.
	- To adjust the space between the text and its border, the attribute 'padding-top' and 'padding-bottom' is adjusted to 0.1 pixels only to create a decent amount of space in-between (padding).
	- The font's text is changed to the font style 'Tahoma' with the property 'font-family' including the attribute 'sans-serif' for clean strokes.
	- Adding an underline for the header can be done through the property 'text-decoration' with the attribute 'underline'.
	- The font size of the header is adjusted using the property 'font-size' and is set to 19 pixels.
	- The font's thickness is adjusted using the property 'font-weight' and is set to 700.
	- The header's CSS is stored within curly braces to be displayed on the web page.
**/
	
header{
	background-color: #17072b;
	text-align: center;
	color: white;
	padding-top: 0.1px;
	padding-bottom: 0.1px;
	font-family: Tahoma, sans-serif;
	text-decoration: underline;
	font-size: 19px;
	font-weight: 700;
}

/** The nav property taken from the html tag allows the contents of the nav to perform css on. In other words, to design the navigation bar of the page. **/

/** 
	- The first properties are set to zero. This makes sure to prevent any default settings on the margin and padding.
	- The property overflow ensures that no elements are shown when overflowing and should be hidden.
	- The property 'background-color' changes the nav's background color to a dark purple to match the header on top.
	- The last two properties make sure that all the nav elements are flexed/aligned while ensuring that they are all centered horizontally.
**/


nav {
	margin: 0;
	padding:0;
	overflow: hidden;
	background-color:  #17072b; 
	display: flex;
	justify-content: center; 
}

/** 
	The next CSS is in charge of the list items within the 'nav'. It makes sure that the default appearance of list types are changed, to float the elements to the left, 
	to create padding within the 'nav', remove any text decoration (removing underline) and to set the font's weight to 400 normal setting.
**/
	

nav li { 
	list-style-type: none;
	float:left;
    	padding: 10px;
	text-decoration: none;
	font-weight: 400;  
}

/** 
	The third part of the nav's CSS focuses on the anchor tags ('a') of the navigation elements within the nav. It ensures that no decorations are set on the text (no underline), to set the color to white/(#FFFFFF), to set the font style to 'Tahoma' including 'sans-serif' for clean strokes and for the font size to be set at 22px.
**/

nav a {
	text-decoration: none;
	color: #FFFFFF;
	font-family: Tahoma, sans-serif;
	font-size: 22px;
}

/** 
	The body style targets the body/main section of the page. It sets the font to 'Arial' with sans-serif, making sure to remove any default margin and padding to set it to 0, changing the 
	text color to black/(#000000) and its background color to white/(#FFFFFF).
**/

body {
	font-family: Arial, sans-serif;
	margin: 0;
    	padding: 0;
    	color: #000000;
    	background-color: #FFFFFF;
}

/** 
	The h2 style targets the h2 headings on the html. This consists of setting its font to 'Tahoma' with sans-serif, changing its weight to 700 and removing any text decorations such as underline.
**/

h2{
	font-family: Tahoma, sans-serif;
	font-weight: 700;
	text-decoration: underline;	
}

/** 
	The article style targets the article section of the page. This involves creating an indentation of 30px at the left margin of the article and setting its font color to black/(#000000)
**/

article {
	margin-left: 30px;
	color: #000000;
}

/** 
	The container class style targets the paragraph tag on the article section setting its position to the left.
**/

.container {
	text-align: left;
}

/** 
	The aside style focuses on the aside section of the page. This consists of setting its left margin at 30px, positioning the aside section to the upper right using the properties 'position: absolute' and 
	further adjusting through the use of 'top' and 'right', setting the aside's background color to a dark blue/(#172d67), changing it's font color to white/(#FFFFFF) and setting the aside's size using 'width'
	and 'height'.
**/

aside {	
	margin-left: 30px;
	position: absolute;
	top: 215px;
	right: 1px;
	background-color: #172d67;
	color: #FFFFFF;
	width: 740px;
	height: 390px;
}

/** 
	The class .h created for aside's h2 focuses on creating an indentation on the left using 'margin'.
**/
.h {
	margin: 30px;
}

/** 
	The ul style focuses on styling the unordered list under the aside tag. It involves changing the ul's font to 'Arial' with sans-serif and setting a margin of 30px to create indentation.
**/

ul {
	font-family: Arial, sans-serif;
	margin: 30px;
}

/** 
	The class '.dash' targets the list by removing its default bullet points.
**/

ul.dash {
        list-style-type: none;
}

/** 
	The third part of ul's style focuses on creating left indentation using the property 'text-indent' with a setting of -40px to move it more to the left creating a gap that aligns with its header and images.
**/

ul.dash > li {
        text-indent: -40px;
}

/** 
	As the default points are already removed, this style focuses on creating custom dashes for the list items using the property 'content' being set to '-'.
**/

ul.dash > li:before {
        content: "-";
}

/** 
	The class '.image2' is created to set an indentation of 30px at the left to make sure that all margins are aligned.
**/

.image2 {
	margin-left: 30px;
}

/** 
	The p style targets the paragraph within the aside section. It involves setting its font to 'Arial' with sans-serif.
**/

p {
	font-family: Arial, sans-serif;
}

/** 
	The footer style focuses on styling the footer found at the end of the page. This consists of setting the background color to purple/(#8c15e9), changing the font color to white/(#FFFFFF), creating a padding of 1px and making sure to position the text to the center.
**/

footer {
	background-color: #8c15e9;
    	color: #FFFFFF;
    	padding: 1px;
    	text-align: center;
}

